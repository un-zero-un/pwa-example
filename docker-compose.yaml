version: '3.7'

services:
    api_php:
        image: ${CONTAINER_REGISTRY_BASE}/api_php
        build:
            context: ./api
            target: api_php
            cache_from:
                - ${CONTAINER_REGISTRY_BASE}/api_php
                - ${CONTAINER_REGISTRY_BASE}/api_nginx
        depends_on:
            - database
        env_file:
            - ./api/.env
        volumes:
            - ./api:/app/api:rw,cached


    api_nginx:
        image: ${CONTAINER_REGISTRY_BASE}/api_nginx
        build:
            context: ./api
            target: api_nginx
            cache_from:
                - ${CONTAINER_REGISTRY_BASE}/api_php
                - ${CONTAINER_REGISTRY_BASE}/api_nginx
        depends_on:
            - api_php
        volumes:
            - ./api/public:/srv/api/public:ro
        ports:
            - '8080:80'

    cache:
        image: ${CONTAINER_REGISTRY_BASE}/api_varnish
        build:
            context: ./api
            target: api_varnish
            cache_from:
                - ${CONTAINER_REGISTRY_BASE}/api_php
                - ${CONTAINER_REGISTRY_BASE}/api_nginx
                - ${CONTAINER_REGISTRY_BASE}/api_varnish
        depends_on:
            - api_nginx
        tmpfs:
            - /usr/local/var/varnish:exec
        ports:
            - '8081:80'

    database:
        image: postgres:11-alpine
        environment:
            - POSTGRES_DB=pwapoc
            - POSTGRES_USER=pwapoc
            - POSTGRES_PASSWORD=pwapoc
        volumes:
            - database-data:/var/lib/postgresql/data:rw
        ports:
            - '5432:5432'

    client:
        image: ${CONTAINER_REGISTRY_BASE}/app
        build:
            context: ./app
            cache_from:
                - ${CONTAINER_REGISTRY_BASE}/app
        env_file:
            - ./app/.env
        volumes:
            - ./app:/app/app:rw,cached
            - /app/app/node_modules
        ports:
            - '80:3000'


volumes:
    database-data: ~
